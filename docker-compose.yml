version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:16
    container_name: voice-to-slide-db
    environment:
      POSTGRES_DB: voice_to_slide
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis (Celery broker + cache)
  redis:
    image: redis:7-alpine
    container_name: voice-to-slide-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # FastAPI Backend
  api:
    build:
      context: .
      dockerfile: api/Dockerfile
    container_name: voice-to-slide-api
    env_file: .env
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/voice_to_slide
      - REDIS_URL=redis://redis:6379/0
      - STORAGE_DIR=/app/storage
    volumes:
      - ./src:/app/src
      - ./api:/app/api
      - ./storage:/app/storage
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uv run uvicorn api.main:app --host 0.0.0.0 --port 8000 --reload

  # Celery Worker - Transcription Queue
  worker-transcription:
    build:
      context: .
      dockerfile: api/Dockerfile
    container_name: voice-to-slide-worker-transcription
    env_file: .env
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/voice_to_slide
      - REDIS_URL=redis://redis:6379/0
      - STORAGE_DIR=/app/storage
    volumes:
      - ./src:/app/src
      - ./api:/app/api
      - ./storage:/app/storage
    depends_on:
      - db
      - redis
    command: uv run celery -A api.celery_config worker --queues=transcription --concurrency=2 --loglevel=info

  # Celery Worker - Analysis Queue
  worker-analysis:
    build:
      context: .
      dockerfile: api/Dockerfile
    container_name: voice-to-slide-worker-analysis
    env_file: .env
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/voice_to_slide
      - REDIS_URL=redis://redis:6379/0
      - STORAGE_DIR=/app/storage
    volumes:
      - ./src:/app/src
      - ./api:/app/api
      - ./storage:/app/storage
    depends_on:
      - db
      - redis
    command: uv run celery -A api.celery_config worker --queues=analysis --concurrency=4 --loglevel=info

  # Celery Worker - Generation Queue (with Playwright)
  worker-generation:
    build:
      context: .
      dockerfile: api/Dockerfile.playwright
    container_name: voice-to-slide-worker-generation
    env_file: .env
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/voice_to_slide
      - REDIS_URL=redis://redis:6379/0
      - STORAGE_DIR=/app/storage
    volumes:
      - ./src:/app/src
      - ./api:/app/api
      - ./storage:/app/storage
    depends_on:
      - db
      - redis
    command: uv run celery -A api.celery_config worker --queues=generation --concurrency=1 --loglevel=info

  # Frontend (Vite dev server)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: voice-to-slide-frontend
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:8000
      - VITE_WS_URL=ws://localhost:8000
    command: npm run dev -- --host 0.0.0.0

volumes:
  postgres_data:
